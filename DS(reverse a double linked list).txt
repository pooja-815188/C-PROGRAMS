#include<stdio.h>
#include<stdlib.h>
struct sample 
{
    int data;
    struct sample *next;
    struct sample *prev;
};

void add_at_beg(struct sample **h,int num)
{
   struct sample *temp=(struct sample*)malloc(sizeof(struct sample));
  
   temp->data=num;
   temp->prev=NULL;
   temp->next=*h;
   *h=temp;
}
void append(struct sample **h,int num)
{
    struct sample *temp=(struct sample*)malloc(sizeof(struct sample));
    
    struct sample *ptr=NULL;
    
    temp->data=num;
    temp->prev=NULL;
    temp->next=NULL;
    ptr=*h;
    
    while(ptr->next!=NULL)
    {
        ptr=ptr->next;
    }
    ptr->next=temp;
    temp->prev=ptr;
}

void insert(struct sample **h,int num,int pos)
{
struct sample*temp=(struct sample*)malloc(sizeof(struct sample));

struct sample*ptr=NULL;

temp->data=num;
temp->prev=NULL;
temp->next=NULL;
ptr=*h;

for(int i=0;i<pos;i++)
{
    ptr=ptr->next;
}
temp->next=ptr->next;
ptr->next=temp;
}
void reverse(struct sample **h)
{
  struct sample *prev=NULL;
  struct sample *temp=*h;
  struct sample *next=NULL;
  
  while(temp!=NULL)
  {
      next=temp->next;
      temp->next=prev;
      prev=temp;
      temp=next;
  }
  *h=prev;
   
}

void display(struct sample **ptr)
{
    struct sample *temp=NULL;
    temp=*ptr;
    
    while(temp!=NULL)
    {
        printf("nodes are =%d\n",temp->data);
        temp=temp->next;
    }
}

int main()
{
    struct sample *p=NULL;
    
    add_at_beg(&p,10);
    add_at_beg(&p,20);
    add_at_beg(&p,30);
    add_at_beg(&p,40);
    add_at_beg(&p,50);
     append(&p,1200);
    insert(&p,123,2);
    display(&p);
    printf("\n");
    reverse(&p);
     display(&p);
}